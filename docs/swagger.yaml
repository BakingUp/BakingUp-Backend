basePath: /api
definitions:
  domain.AddEditIngredientStockDetail:
    properties:
      ingredient_eng_name:
        type: string
      ingredient_thai_name:
        type: string
      unit:
        type: string
    type: object
  domain.AddIngredientRequest:
    properties:
      day_before_expire:
        type: string
      img:
        items:
          type: string
        type: array
      ingredient_eng_name:
        type: string
      ingredient_thai_name:
        type: string
      stock_less_than:
        type: string
      unit:
        type: string
      user_id:
        type: string
    type: object
  domain.AddIngredientStockRequest:
    properties:
      expiration_date:
        type: string
      img:
        type: string
      ingredient_brand:
        type: string
      ingredient_id:
        type: string
      note:
        type: string
      price:
        type: string
      quantity:
        type: string
      supplier:
        type: string
      user_id:
        type: string
    type: object
  domain.AddRecipeIngredientRequest:
    properties:
      ingredient_id:
        type: string
      ingredient_quantity:
        type: string
    type: object
  domain.AddRecipeRequest:
    properties:
      eng_instruction:
        type: string
      ingredients:
        items:
          $ref: '#/definitions/domain.AddRecipeIngredientRequest'
        type: array
      instruction_img:
        items:
          type: string
        type: array
      recipe_eng_name:
        type: string
      recipe_img:
        items:
          type: string
        type: array
      recipe_thai_name:
        type: string
      servings:
        type: string
      thai_instruction:
        type: string
      total_hours:
        type: string
      total_mins:
        type: string
      user_id:
        type: string
    type: object
  domain.AddStockDetailRequest:
    properties:
      ingredients:
        items:
          $ref: '#/definitions/domain.AddStockIngredientDetailRequest'
        type: array
      note:
        type: string
      quantity:
        type: string
      recipe_id:
        type: string
      sell_by_date:
        type: string
    type: object
  domain.AddStockIngredientDetailRequest:
    properties:
      ingredient_id:
        type: string
      quantity:
        type: string
    type: object
  domain.AddStockRequest:
    properties:
      expiration_date:
        type: string
      lst:
        type: string
      selling_price:
        type: string
      stock_id:
        type: string
      stock_less_than:
        type: string
    type: object
  domain.ChangeExpirationDateSetting:
    properties:
      black_expiration_date:
        type: integer
      red_expiration_date:
        type: integer
      user_id:
        type: string
      yellow_expiration_date:
        type: integer
    type: object
  domain.ChangeFixCostSetting:
    properties:
      advertising:
        type: number
      electricity:
        type: number
      fix_cost_id:
        type: string
      gas:
        type: number
      insurance:
        type: number
      note:
        type: string
      other:
        type: number
      rent:
        type: number
      salaries:
        type: number
      subscriptions:
        type: number
      water:
        type: number
    type: object
  domain.ChangeUserLanguage:
    properties:
      language:
        type: string
      user_id:
        type: string
    type: object
  domain.CostRevenueChartItem:
    properties:
      cost:
        type: number
      month:
        type: string
      net_profit:
        type: number
      revenue:
        type: number
    type: object
  domain.CreateNotificationItem:
    properties:
      created_at:
        type: string
      eng_message:
        type: string
      eng_title:
        type: string
      is_read:
        type: boolean
      item_id:
        type: string
      item_name:
        type: string
      noti_item_type:
        type: string
      noti_type:
        type: string
      thai_message:
        type: string
      thai_title:
        type: string
      user_id:
        type: string
    type: object
  domain.DashboardChartDataResponse:
    properties:
      cost_revenue:
        items:
          $ref: '#/definitions/domain.CostRevenueChartItem'
        type: array
      profit_threshold:
        items:
          $ref: '#/definitions/domain.ProfitThresholdChartItem'
        type: array
    type: object
  domain.EditRecipeRequest:
    properties:
      eng_instruction:
        type: string
      ingredients:
        items:
          $ref: '#/definitions/domain.AddRecipeIngredientRequest'
        type: array
      recipe_eng_name:
        type: string
      recipe_id:
        type: string
      recipe_thai_name:
        type: string
      servings:
        type: string
      thai_instruction:
        type: string
      total_hours:
        type: string
      total_mins:
        type: string
    type: object
  domain.ExpirationDateSetting:
    properties:
      black_expiration_date:
        type: integer
      red_expiration_date:
        type: integer
      yellow_expiration_date:
        type: integer
    type: object
  domain.FilterItemResponse:
    properties:
      detail:
        type: string
      name:
        type: string
      url:
        type: string
    type: object
  domain.FilterProductResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/domain.FilterItemResponse'
        type: array
    type: object
  domain.FilterSellingRequest:
    properties:
      end_date_time:
        type: string
      filter_type:
        type: string
      order_types:
        items:
          type: string
        type: array
      sales_channel:
        items:
          type: string
        type: array
      sort_type:
        type: string
      start_date_time:
        type: string
      unit_type:
        type: string
      user_id:
        type: string
    type: object
  domain.FixCostSetting:
    properties:
      advertising:
        type: number
      electricity:
        type: number
      gas:
        type: number
      id:
        type: string
      insurance:
        type: number
      note:
        type: string
      other:
        type: number
      rent:
        type: number
      salaries:
        type: number
      subscriptions:
        type: number
      water:
        type: number
    type: object
  domain.GetEditRecipeDetail:
    properties:
      eng_instruction:
        type: string
      ingredients:
        items:
          $ref: '#/definitions/domain.GetEditRecipeIngredientDetail'
        type: array
      recipe_eng_name:
        type: string
      recipe_thai_name:
        type: string
      servings:
        type: string
      thai_instruction:
        type: string
      total_hours:
        type: string
      total_mins:
        type: string
    type: object
  domain.GetEditRecipeIngredientDetail:
    properties:
      ingredient_id:
        type: string
      ingredient_name:
        type: string
      ingredient_quantity:
        type: string
      ingredient_unit:
        type: string
      ingredient_url:
        type: string
    type: object
  domain.Ingredient:
    properties:
      expiration_status:
        type: string
      ingredient_id:
        type: string
      ingredient_name:
        type: string
      ingredient_url:
        type: string
      quantity:
        type: string
      stock:
        type: integer
    type: object
  domain.IngredientDetail:
    properties:
      ingredient_less_than:
        type: integer
      ingredient_name:
        type: string
      ingredient_quantity:
        type: string
      ingredient_url:
        items:
          type: string
        type: array
      stock_amount:
        type: integer
      stocks:
        items:
          $ref: '#/definitions/domain.Stock'
        type: array
    type: object
  domain.IngredientList:
    properties:
      ingredients:
        items:
          $ref: '#/definitions/domain.Ingredient'
        type: array
    type: object
  domain.IngredientNote:
    properties:
      ingredient_note:
        type: string
      ingredient_note_id:
        type: string
      note_created_at:
        type: string
    type: object
  domain.IngredientStockDetail:
    properties:
      day_before_expire:
        type: string
      ingredient_brand:
        type: string
      ingredient_eng_name:
        type: string
      ingredient_price:
        type: string
      ingredient_quantity:
        type: string
      ingredient_stock_url:
        type: string
      ingredient_supplier:
        type: string
      ingredient_thai_name:
        type: string
      notes:
        items:
          $ref: '#/definitions/domain.IngredientNote'
        type: array
    type: object
  domain.ManageUserRequest:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      store_name:
        type: string
      tel:
        type: string
      user_id:
        type: string
    type: object
  domain.NotificationItem:
    properties:
      created_at:
        type: string
      is_read:
        type: boolean
      item_id:
        type: string
      item_name:
        type: string
      message:
        type: string
      noti_id:
        type: string
      noti_item_type:
        type: string
      noti_type:
        type: string
      title:
        type: string
    type: object
  domain.NotificationList:
    properties:
      notis:
        items:
          $ref: '#/definitions/domain.NotificationItem'
        type: array
    type: object
  domain.ProfitThresholdChartItem:
    properties:
      name:
        type: string
      threshold:
        type: number
    type: object
  domain.RecipeDetail:
    properties:
      hidden_cost:
        type: number
      instruction_steps:
        type: string
      instruction_url:
        items:
          type: string
        type: array
      labor_cost:
        type: number
      num_of_order:
        type: integer
      profit_margin:
        type: number
      recipe_ingredients:
        items:
          $ref: '#/definitions/domain.RecipeIngredient'
        type: array
      recipe_name:
        type: string
      recipe_url:
        items:
          type: string
        type: array
      servings:
        type: integer
      stars:
        type: integer
      status:
        type: integer
      total_time:
        type: string
    type: object
  domain.RecipeIngredient:
    properties:
      ingredient_name:
        type: string
      ingredient_price:
        type: number
      ingredient_quantity:
        type: string
      ingredient_url:
        type: string
    type: object
  domain.Stock:
    properties:
      expiration_date:
        type: string
      expiration_status:
        type: string
      price:
        type: string
      quantity:
        type: string
      stock_id:
        type: string
      stock_url:
        type: string
    type: object
  domain.StockBatch:
    properties:
      note:
        type: string
      note_created_at:
        type: string
      quantity:
        type: integer
      recipe_name:
        type: string
      recipe_url:
        type: string
      sell_by_date:
        type: string
      stock_detail_id:
        type: string
    type: object
  domain.StockDetail:
    properties:
      created_at:
        type: string
      lst_status:
        type: string
      quantity:
        type: integer
      sell_by_date:
        type: string
      stock_detail_id:
        type: string
    type: object
  domain.StockItem:
    properties:
      lst:
        type: integer
      lst_status:
        type: string
      quantity:
        type: integer
      selling_price:
        type: number
      stock_id:
        type: string
      stock_name:
        type: string
      stock_url:
        type: string
    type: object
  domain.StockList:
    properties:
      stocks:
        items:
          $ref: '#/definitions/domain.StockItem'
        type: array
    type: object
  domain.StockRecipeDetail:
    properties:
      ingredients:
        items:
          $ref: '#/definitions/domain.StockRecipeIngredient'
        type: array
      recipe_name:
        type: string
      servings:
        type: integer
      total_time:
        type: string
    type: object
  domain.StockRecipeIngredient:
    properties:
      ingredient_id:
        type: string
      ingredient_name:
        type: string
      ingredient_quantity:
        type: number
      ingredient_url:
        type: string
      stock_quantity:
        type: number
      unit:
        type: string
    type: object
  domain.UnreadNotification:
    properties:
      unread_noti_amount:
        type: integer
    type: object
  domain.UpdateHiddenCostRequest:
    properties:
      hidden_cost:
        type: string
      recipe_id:
        type: string
    type: object
  domain.UpdateLaborCostRequest:
    properties:
      labor_cost:
        type: string
      recipe_id:
        type: string
    type: object
  domain.UpdateProfitMarginRequest:
    properties:
      profit_margin:
        type: string
      recipe_id:
        type: string
    type: object
  domain.UserLanguage:
    properties:
      language:
        type: string
    type: object
  http.response:
    properties:
      data: {}
      error:
        type: string
      message:
        example: Success
        type: string
      status:
        example: 200
        type: integer
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the BakingUp Backend API.
  title: BakingUp Backend API
  version: "1.0"
paths:
  /home/getDashboardChartData:
    get:
      consumes:
      - application/json
      description: Get data of each chart on dashboard by user ID
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Start Date Time
        in: query
        name: start_date_time
        type: string
      - description: End Date Time
        in: query
        name: end_date_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.DashboardChartDataResponse'
        "400":
          description: Cannot get data for all charts.
          schema:
            $ref: '#/definitions/http.response'
      summary: Get data of each chart on dashboard
      tags:
      - home
  /home/getTopProducts:
    post:
      consumes:
      - application/json
      description: Get top products to display in the intelligent dashboard by user
        ID
      parameters:
      - description: Filter Request
        in: body
        name: filter_request
        required: true
        schema:
          $ref: '#/definitions/domain.FilterSellingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.FilterProductResponse'
        "400":
          description: Cannot get the filter response.
          schema:
            $ref: '#/definitions/http.response'
      summary: Get top products to display in the intelligent dashboard
      tags:
      - home
  /home/getUnreadNotification:
    get:
      consumes:
      - application/json
      description: Get unread notification amount of user by user ID
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.UnreadNotification'
        "400":
          description: Cannot get unread notification amount.
          schema:
            $ref: '#/definitions/http.response'
      summary: Get unread notification amount of user
      tags:
      - home
  /ingredient/addIngredientStock:
    post:
      consumes:
      - application/json
      description: Add ingredient stock by using ingredient stock request
      parameters:
      - description: Ingredient Stock Request
        in: body
        name: AddIngredientStockRequest
        required: true
        schema:
          $ref: '#/definitions/domain.AddIngredientStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot add ingredient stock"'
          schema:
            $ref: '#/definitions/http.response'
      summary: Add ingredient stock
      tags:
      - ingredient
  /ingredient/addIngredients:
    post:
      consumes:
      - application/json
      description: Add ingredient by using ingredient request
      parameters:
      - description: Ingredient Request
        in: body
        name: AddIngredientRequest
        required: true
        schema:
          $ref: '#/definitions/domain.AddIngredientRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot add ingredients
          schema:
            $ref: '#/definitions/http.response'
      summary: Add ingredient
      tags:
      - ingredient
  /ingredient/deleteIngredient:
    delete:
      consumes:
      - application/json
      description: Delete an ingredient by using ingredient id
      parameters:
      - description: Ingredient ID
        in: query
        name: ingredient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete an ingredient
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete an ingredient
      tags:
      - ingredient
  /ingredient/deleteIngredientBatchNote:
    delete:
      consumes:
      - application/json
      description: Delete ingredient batch note by ingredient note ID
      parameters:
      - description: Ingredient Note ID
        in: query
        name: ingredient_note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete ingredient batch note
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete ingredient batch note
      tags:
      - ingredient
  /ingredient/deleteIngredientStock:
    delete:
      consumes:
      - application/json
      description: Delete an ingredient stock by using ingredient stock id
      parameters:
      - description: Ingredient Stock ID
        in: query
        name: ingredient_stock_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete an ingredient stock
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete an ingredient stock
      tags:
      - ingredient
  /ingredient/getAddEditIngredientStockDetail:
    get:
      consumes:
      - application/json
      description: Get add edit ingredient stock details by ingredient ID
      parameters:
      - description: Ingredient ID
        in: query
        name: ingredient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.AddEditIngredientStockDetail'
        "400":
          description: Cannot get add edit ingredient stock detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get add edit ingredient stock details
      tags:
      - ingredient
  /ingredient/getAllIngredients:
    get:
      consumes:
      - application/json
      description: Get all ingredients by user ID
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.IngredientList'
        "400":
          description: Cannot get all ingredients
          schema:
            $ref: '#/definitions/http.response'
      summary: Get all ingredients
      tags:
      - ingredient
  /ingredient/getIngredientDetail:
    get:
      consumes:
      - application/json
      description: Get ingredient details by ingredient ID
      parameters:
      - description: Ingredient ID
        in: query
        name: ingredient_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.IngredientDetail'
        "400":
          description: Cannot get ingredient detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get ingredient details
      tags:
      - ingredient
  /ingredient/getIngredientStockDetail:
    get:
      consumes:
      - application/json
      description: Get ingredient stock details by ingredient stock ID
      parameters:
      - description: Ingredient stock ID
        in: query
        name: ingredient_stock_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.IngredientStockDetail'
        "400":
          description: Cannot get ingredient stock detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get ingredient stock details
      tags:
      - ingredient
  /noti/createNotification:
    post:
      consumes:
      - application/json
      description: Create a new notification by user id
      parameters:
      - description: Notification Item
        in: body
        name: notification_item
        required: true
        schema:
          $ref: '#/definitions/domain.CreateNotificationItem'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully add a new notification.
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot add a new notification.
          schema:
            $ref: '#/definitions/http.response'
      summary: Create a new notification
      tags:
      - notification
  /noti/deleteNotification:
    delete:
      consumes:
      - application/json
      description: Delete a notification by notification id
      parameters:
      - description: Noti ID
        in: query
        name: noti_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete a notification.
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete a notification.
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete a notification
      tags:
      - notification
  /noti/getAllNotifications:
    get:
      consumes:
      - application/json
      description: Get all notifications by user ID
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.NotificationList'
        "400":
          description: Cannot get all notifications of the user.
          schema:
            $ref: '#/definitions/http.response'
      summary: Get all notifications
      tags:
      - notification
  /noti/readAllNotifications:
    put:
      consumes:
      - application/json
      description: Read all notification messages by user id
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update the read status of all the notifications.
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot update the read status of all the notifications.
          schema:
            $ref: '#/definitions/http.response'
      summary: Read all notification messages
      tags:
      - notification
  /noti/readNotification:
    put:
      consumes:
      - application/json
      description: Read a notification message by notification id
      parameters:
      - description: Noti ID
        in: query
        name: noti_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully update the read status of the notification.
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot update the read status of the notification.
          schema:
            $ref: '#/definitions/http.response'
      summary: Read a notification message
      tags:
      - notification
  /recipe/addRecipe:
    post:
      consumes:
      - application/json
      description: Add a recipe
      parameters:
      - description: Recipe Request
        in: body
        name: AddRecipeRequest
        required: true
        schema:
          $ref: '#/definitions/domain.AddRecipeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot add a recipe
          schema:
            $ref: '#/definitions/http.response'
      summary: Add a recipe
      tags:
      - recipe
  /recipe/deleteRecipe:
    delete:
      consumes:
      - application/json
      description: Delete a recipe by using recipe id
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete a recipe
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete a recipe
      tags:
      - recipe
  /recipe/editRecipe:
    put:
      consumes:
      - application/json
      description: Edit a recipe
      parameters:
      - description: Edit Recipe Request
        in: body
        name: EditRecipeRequest
        required: true
        schema:
          $ref: '#/definitions/domain.EditRecipeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot edit a recipe
          schema:
            $ref: '#/definitions/http.response'
      summary: Edit a recipe
      tags:
      - recipe
  /recipe/getEditRecipeDetail:
    get:
      consumes:
      - application/json
      description: Get edit recipe details by recipe ID
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.GetEditRecipeDetail'
        "400":
          description: Cannot get edit recipe detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get edit recipe details
      tags:
      - recipe
  /recipe/getRecipeDetail:
    get:
      consumes:
      - application/json
      description: Get recipe details by recipe ID
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.RecipeDetail'
        "400":
          description: Cannot get recipe detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get recipe details
      tags:
      - recipe
  /recipe/updateHiddenCost:
    put:
      consumes:
      - application/json
      description: Update hidden cost
      parameters:
      - description: Hidden Cost Request
        in: body
        name: UpdateHiddenCostRequest
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateHiddenCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot update hidden cost
          schema:
            $ref: '#/definitions/http.response'
      summary: Update hidden cost
      tags:
      - recipe
  /recipe/updateLaborCost:
    put:
      consumes:
      - application/json
      description: Update labor cost
      parameters:
      - description: Labor Cost Request
        in: body
        name: UpdateLaborCostRequest
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateLaborCostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot update labor cost
          schema:
            $ref: '#/definitions/http.response'
      summary: Update labor cost
      tags:
      - recipe
  /recipe/updateProfitMargin:
    put:
      consumes:
      - application/json
      description: Update profit margin
      parameters:
      - description: Profit Margin Request
        in: body
        name: UpdateProfitMarginRequest
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateProfitMarginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot update profit margin
          schema:
            $ref: '#/definitions/http.response'
      summary: Update profit margin
      tags:
      - recipe
  /settings/changeColorExpired:
    put:
      consumes:
      - application/json
      description: Change the color of expired icon by user id
      parameters:
      - description: Change Color Expired Icon
        in: body
        name: change_color_expired_icon
        required: true
        schema:
          $ref: '#/definitions/domain.ChangeExpirationDateSetting'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully change the color of expiration icon
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot change the color of expiration icon
          schema:
            $ref: '#/definitions/http.response'
      summary: Change the color of expired icon
      tags:
      - settings
  /settings/changeFixCost:
    put:
      consumes:
      - application/json
      description: Change the fix cost by user id
      parameters:
      - description: Change Fix Cost
        in: body
        name: change_fix_cost
        required: true
        schema:
          $ref: '#/definitions/domain.ChangeFixCostSetting'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully change the fix cost
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot change the fix cost
          schema:
            $ref: '#/definitions/http.response'
      summary: Change the fix cost
      tags:
      - settings
  /settings/changeLanguage:
    put:
      consumes:
      - application/json
      description: Change the application language by user id
      parameters:
      - description: Change Language
        in: body
        name: change_language
        required: true
        schema:
          $ref: '#/definitions/domain.ChangeUserLanguage'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully change the language.
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot change the language
          schema:
            $ref: '#/definitions/http.response'
      summary: Change the application language
      tags:
      - settings
  /settings/deleteAccount:
    delete:
      consumes:
      - application/json
      description: Delete an account by user id
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully delete an account
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete an account
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete an account
      tags:
      - settings
  /settings/getColorExpired:
    get:
      consumes:
      - application/json
      description: Get the color of expired icon by user id
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.ExpirationDateSetting'
        "400":
          description: Cannot get the color of expiration icon
          schema:
            $ref: '#/definitions/http.response'
      summary: Get the color of expired icon
      tags:
      - settings
  /settings/getFixCost:
    get:
      consumes:
      - application/json
      description: Get the fix cost by user id
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Created At
        in: query
        name: created_at
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.FixCostSetting'
        "400":
          description: Cannot get the fix cost
          schema:
            $ref: '#/definitions/http.response'
      summary: Get the fix cost
      tags:
      - settings
  /settings/getLanguage:
    get:
      consumes:
      - application/json
      description: Get the application language by user id
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.UserLanguage'
        "400":
          description: Cannot get the language
          schema:
            $ref: '#/definitions/http.response'
      summary: Get the application language
      tags:
      - settings
  /stock/addStock:
    post:
      consumes:
      - application/json
      description: Add a stock by stock ID, LST, and expiration date
      parameters:
      - description: Stock ID
        in: body
        name: stock_id
        required: true
        schema:
          $ref: '#/definitions/domain.AddStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot add a stock
          schema:
            $ref: '#/definitions/http.response'
      summary: Add a stock
      tags:
      - stock
  /stock/addStockDetail:
    post:
      consumes:
      - application/json
      description: Add a stock detail by stock detail ID, quantity, and sell by date
      parameters:
      - description: Stock Detail
        in: body
        name: stock_detail
        required: true
        schema:
          $ref: '#/definitions/domain.AddStockDetailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot add a stock detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Add a stock detail
      tags:
      - stock
  /stock/deleteStock:
    delete:
      consumes:
      - application/json
      description: Delete a stock by recipe id
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete a stock
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete a stock
      tags:
      - stock
  /stock/deleteStockBatch:
    delete:
      consumes:
      - application/json
      description: Delete a stock batch by stock detail ID
      parameters:
      - description: Stock Detail ID
        in: query
        name: stock_detail_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot delete a stock batch
          schema:
            $ref: '#/definitions/http.response'
      summary: Delete a stock batch
      tags:
      - stock
  /stock/getAllStocks:
    get:
      consumes:
      - application/json
      description: Get all stocks by user ID
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.StockList'
        "400":
          description: Cannot get all stocks
          schema:
            $ref: '#/definitions/http.response'
      summary: Get all stocks
      tags:
      - stock
  /stock/getStockBatch:
    get:
      consumes:
      - application/json
      description: Get stock batch by stock detail ID
      parameters:
      - description: Stock Detail ID
        in: query
        name: stock_detail_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.StockBatch'
        "400":
          description: Cannot get stock batch
          schema:
            $ref: '#/definitions/http.response'
      summary: Get stock batch
      tags:
      - stock
  /stock/getStockDetail:
    get:
      consumes:
      - application/json
      description: Get stock details by recipe ID and user ID
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.StockDetail'
        "400":
          description: Cannot get stock detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get stock details
      tags:
      - stock
  /stock/getStockRecipeDetail:
    get:
      consumes:
      - application/json
      description: Get stock recipe detail by recipe ID
      parameters:
      - description: Recipe ID
        in: query
        name: recipe_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/domain.StockRecipeDetail'
        "400":
          description: Cannot get stock recipe detail
          schema:
            $ref: '#/definitions/http.response'
      summary: Get stock recipe detail
      tags:
      - stock
  /user/editUserInfo:
    put:
      consumes:
      - application/json
      description: Edit user information by using user information request
      parameters:
      - description: Edit User Info
        in: body
        name: edit_user_info
        required: true
        schema:
          $ref: '#/definitions/domain.ManageUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully edit the user information.
          schema:
            $ref: '#/definitions/http.response'
        "400":
          description: Cannot edit the user information
          schema:
            $ref: '#/definitions/http.response'
      summary: Edit user information
      tags:
      - user
swagger: "2.0"
